Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    COM_BLOCK
    NEW_LINE
    SPACE

Grammar

Rule 0     S' -> program
Rule 1     program -> form
Rule 2     form -> definition
Rule 3     form -> expression
Rule 4     form -> definition definition
Rule 5     definition -> OPEN_PAR DEFINE ID body CLOSE_PAR
Rule 6     body -> expression
Rule 7     body -> definition
Rule 8     expression -> constant
Rule 9     expression -> if_expression
Rule 10    expression -> do_expression
Rule 11    expression -> cond_expression
Rule 12    expression -> comparison_expression
Rule 13    expression -> operation
Rule 14    expression -> ID
Rule 15    expression -> read
Rule 16    expression -> display
Rule 17    expression -> cons
Rule 18    expression -> list_manip
Rule 19    if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR
Rule 20    if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
Rule 21    cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
Rule 22    cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
Rule 23    do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
Rule 24    id_set -> OPEN_PAR ID constant CLOSE_PAR
Rule 25    operation -> OPEN_PAR symbol expression expression CLOSE_PAR
Rule 26    comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR
Rule 27    read -> READ
Rule 28    read -> OPEN_PAR READ CLOSE_PAR
Rule 29    display -> OPEN_PAR DISPLAY expression CLOSE_PAR
Rule 30    cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR
Rule 31    list_manip -> OPEN_PAR list_op list CLOSE_PAR
Rule 32    list_expression -> list
Rule 33    list_expression -> constant
Rule 34    list_op -> CDR
Rule 35    list_op -> CAR
Rule 36    list_op -> LAST
Rule 37    list -> cons
Rule 38    list -> list_manip
Rule 39    list -> EMPTY
Rule 40    list -> ID
Rule 41    symbol -> ADD
Rule 42    symbol -> MINUS
Rule 43    symbol -> DIVIDE
Rule 44    symbol -> MULTIPLY
Rule 45    symbol -> REMAINDER
Rule 46    boolean -> TRUE
Rule 47    boolean -> FALSE
Rule 48    comparison -> EQQUES
Rule 49    comparison -> NEQQUES
Rule 50    comparison -> EQUALS
Rule 51    comparison -> GREATER
Rule 52    comparison -> LESS
Rule 53    comparison -> GREATER_EQUAL
Rule 54    comparison -> LESS_EQUAL
Rule 55    constant -> INT
Rule 56    constant -> FLOAT
Rule 57    constant -> CHARACTER
Rule 58    constant -> STRING
Rule 59    constant -> boolean

Terminals, with rules where they appear

ADD                  : 41
CAR                  : 35
CDR                  : 34
CHARACTER            : 57
CLOSE_BRA            : 21 22 22
CLOSE_PAR            : 5 19 20 21 22 23 24 25 26 28 29 30 31
COMMENT              : 
COM_BLOCK            : 
COND                 : 21 22
CONS                 : 30
DEFINE               : 5
DISPLAY              : 29
DIVIDE               : 43
DO                   : 23
ELSE                 : 22
EMPTY                : 39
EQQUES               : 48
EQUALS               : 50
FALSE                : 47
FLOAT                : 56
GREATER              : 51
GREATER_EQUAL        : 53
ID                   : 5 14 24 40
IF                   : 19 20
INT                  : 55
LAST                 : 36
LESS                 : 52
LESS_EQUAL           : 54
MINUS                : 42
MULTIPLY             : 44
NEQQUES              : 49
NEW_LINE             : 
OPEN_BRA             : 21 22 22
OPEN_PAR             : 5 19 20 21 22 23 24 25 26 28 29 30 31
READ                 : 27 28
REMAINDER            : 45
SPACE                : 
STRING               : 58
TRUE                 : 46
error                : 

Nonterminals, with rules where they appear

body                 : 5
boolean              : 59
comparison           : 26
comparison_expression : 12 19 20 21 22 23
cond_expression      : 11
cons                 : 17 37
constant             : 8 24 30 33
definition           : 2 4 4 7
display              : 16
do_expression        : 10
expression           : 3 6 19 20 20 21 22 22 23 25 25 26 26 29
form                 : 1
id_set               : 23
if_expression        : 9
list                 : 31 32
list_expression      : 30
list_manip           : 18 38
list_op              : 31
operation            : 13 23
program              : 0
read                 : 15
symbol               : 25

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . form
    (2) form -> . definition
    (3) form -> . expression
    (4) form -> . definition definition
    (5) definition -> . OPEN_PAR DEFINE ID body CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    OPEN_PAR        shift and go to state 5
    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    program                        shift and go to state 1
    form                           shift and go to state 2
    definition                     shift and go to state 3
    expression                     shift and go to state 4
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    comparison_expression          shift and go to state 11
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (1) program -> form .

    $end            reduce using rule 1 (program -> form .)


state 3

    (2) form -> definition .
    (4) form -> definition . definition
    (5) definition -> . OPEN_PAR DEFINE ID body CLOSE_PAR

    $end            reduce using rule 2 (form -> definition .)
    OPEN_PAR        shift and go to state 26

    definition                     shift and go to state 25

state 4

    (3) form -> expression .

    $end            reduce using rule 3 (form -> expression .)


state 5

    (5) definition -> OPEN_PAR . DEFINE ID body CLOSE_PAR
    (19) if_expression -> OPEN_PAR . IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> OPEN_PAR . IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> OPEN_PAR . DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> OPEN_PAR . COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> OPEN_PAR . COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> OPEN_PAR . comparison expression expression CLOSE_PAR
    (25) operation -> OPEN_PAR . symbol expression expression CLOSE_PAR
    (28) read -> OPEN_PAR . READ CLOSE_PAR
    (29) display -> OPEN_PAR . DISPLAY expression CLOSE_PAR
    (30) cons -> OPEN_PAR . CONS constant list_expression CLOSE_PAR
    (31) list_manip -> OPEN_PAR . list_op list CLOSE_PAR
    (48) comparison -> . EQQUES
    (49) comparison -> . NEQQUES
    (50) comparison -> . EQUALS
    (51) comparison -> . GREATER
    (52) comparison -> . LESS
    (53) comparison -> . GREATER_EQUAL
    (54) comparison -> . LESS_EQUAL
    (41) symbol -> . ADD
    (42) symbol -> . MINUS
    (43) symbol -> . DIVIDE
    (44) symbol -> . MULTIPLY
    (45) symbol -> . REMAINDER
    (34) list_op -> . CDR
    (35) list_op -> . CAR
    (36) list_op -> . LAST

    DEFINE          shift and go to state 27
    IF              shift and go to state 28
    DO              shift and go to state 29
    COND            shift and go to state 30
    READ            shift and go to state 33
    DISPLAY         shift and go to state 34
    CONS            shift and go to state 35
    EQQUES          shift and go to state 37
    NEQQUES         shift and go to state 38
    EQUALS          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    ADD             shift and go to state 44
    MINUS           shift and go to state 45
    DIVIDE          shift and go to state 46
    MULTIPLY        shift and go to state 47
    REMAINDER       shift and go to state 48
    CDR             shift and go to state 49
    CAR             shift and go to state 50
    LAST            shift and go to state 51

    comparison                     shift and go to state 31
    symbol                         shift and go to state 32
    list_op                        shift and go to state 36

state 6

    (14) expression -> ID .

    $end            reduce using rule 14 (expression -> ID .)
    CLOSE_PAR       reduce using rule 14 (expression -> ID .)
    ID              reduce using rule 14 (expression -> ID .)
    INT             reduce using rule 14 (expression -> ID .)
    FLOAT           reduce using rule 14 (expression -> ID .)
    CHARACTER       reduce using rule 14 (expression -> ID .)
    STRING          reduce using rule 14 (expression -> ID .)
    OPEN_PAR        reduce using rule 14 (expression -> ID .)
    READ            reduce using rule 14 (expression -> ID .)
    TRUE            reduce using rule 14 (expression -> ID .)
    FALSE           reduce using rule 14 (expression -> ID .)
    CLOSE_BRA       reduce using rule 14 (expression -> ID .)


state 7

    (8) expression -> constant .

    $end            reduce using rule 8 (expression -> constant .)
    CLOSE_PAR       reduce using rule 8 (expression -> constant .)
    ID              reduce using rule 8 (expression -> constant .)
    INT             reduce using rule 8 (expression -> constant .)
    FLOAT           reduce using rule 8 (expression -> constant .)
    CHARACTER       reduce using rule 8 (expression -> constant .)
    STRING          reduce using rule 8 (expression -> constant .)
    OPEN_PAR        reduce using rule 8 (expression -> constant .)
    READ            reduce using rule 8 (expression -> constant .)
    TRUE            reduce using rule 8 (expression -> constant .)
    FALSE           reduce using rule 8 (expression -> constant .)
    CLOSE_BRA       reduce using rule 8 (expression -> constant .)


state 8

    (9) expression -> if_expression .

    $end            reduce using rule 9 (expression -> if_expression .)
    CLOSE_PAR       reduce using rule 9 (expression -> if_expression .)
    ID              reduce using rule 9 (expression -> if_expression .)
    INT             reduce using rule 9 (expression -> if_expression .)
    FLOAT           reduce using rule 9 (expression -> if_expression .)
    CHARACTER       reduce using rule 9 (expression -> if_expression .)
    STRING          reduce using rule 9 (expression -> if_expression .)
    OPEN_PAR        reduce using rule 9 (expression -> if_expression .)
    READ            reduce using rule 9 (expression -> if_expression .)
    TRUE            reduce using rule 9 (expression -> if_expression .)
    FALSE           reduce using rule 9 (expression -> if_expression .)
    CLOSE_BRA       reduce using rule 9 (expression -> if_expression .)


state 9

    (10) expression -> do_expression .

    $end            reduce using rule 10 (expression -> do_expression .)
    CLOSE_PAR       reduce using rule 10 (expression -> do_expression .)
    ID              reduce using rule 10 (expression -> do_expression .)
    INT             reduce using rule 10 (expression -> do_expression .)
    FLOAT           reduce using rule 10 (expression -> do_expression .)
    CHARACTER       reduce using rule 10 (expression -> do_expression .)
    STRING          reduce using rule 10 (expression -> do_expression .)
    OPEN_PAR        reduce using rule 10 (expression -> do_expression .)
    READ            reduce using rule 10 (expression -> do_expression .)
    TRUE            reduce using rule 10 (expression -> do_expression .)
    FALSE           reduce using rule 10 (expression -> do_expression .)
    CLOSE_BRA       reduce using rule 10 (expression -> do_expression .)


state 10

    (11) expression -> cond_expression .

    $end            reduce using rule 11 (expression -> cond_expression .)
    CLOSE_PAR       reduce using rule 11 (expression -> cond_expression .)
    ID              reduce using rule 11 (expression -> cond_expression .)
    INT             reduce using rule 11 (expression -> cond_expression .)
    FLOAT           reduce using rule 11 (expression -> cond_expression .)
    CHARACTER       reduce using rule 11 (expression -> cond_expression .)
    STRING          reduce using rule 11 (expression -> cond_expression .)
    OPEN_PAR        reduce using rule 11 (expression -> cond_expression .)
    READ            reduce using rule 11 (expression -> cond_expression .)
    TRUE            reduce using rule 11 (expression -> cond_expression .)
    FALSE           reduce using rule 11 (expression -> cond_expression .)
    CLOSE_BRA       reduce using rule 11 (expression -> cond_expression .)


state 11

    (12) expression -> comparison_expression .

    $end            reduce using rule 12 (expression -> comparison_expression .)
    CLOSE_PAR       reduce using rule 12 (expression -> comparison_expression .)
    ID              reduce using rule 12 (expression -> comparison_expression .)
    INT             reduce using rule 12 (expression -> comparison_expression .)
    FLOAT           reduce using rule 12 (expression -> comparison_expression .)
    CHARACTER       reduce using rule 12 (expression -> comparison_expression .)
    STRING          reduce using rule 12 (expression -> comparison_expression .)
    OPEN_PAR        reduce using rule 12 (expression -> comparison_expression .)
    READ            reduce using rule 12 (expression -> comparison_expression .)
    TRUE            reduce using rule 12 (expression -> comparison_expression .)
    FALSE           reduce using rule 12 (expression -> comparison_expression .)
    CLOSE_BRA       reduce using rule 12 (expression -> comparison_expression .)


state 12

    (13) expression -> operation .

    $end            reduce using rule 13 (expression -> operation .)
    CLOSE_PAR       reduce using rule 13 (expression -> operation .)
    ID              reduce using rule 13 (expression -> operation .)
    INT             reduce using rule 13 (expression -> operation .)
    FLOAT           reduce using rule 13 (expression -> operation .)
    CHARACTER       reduce using rule 13 (expression -> operation .)
    STRING          reduce using rule 13 (expression -> operation .)
    OPEN_PAR        reduce using rule 13 (expression -> operation .)
    READ            reduce using rule 13 (expression -> operation .)
    TRUE            reduce using rule 13 (expression -> operation .)
    FALSE           reduce using rule 13 (expression -> operation .)
    CLOSE_BRA       reduce using rule 13 (expression -> operation .)


state 13

    (15) expression -> read .

    $end            reduce using rule 15 (expression -> read .)
    CLOSE_PAR       reduce using rule 15 (expression -> read .)
    ID              reduce using rule 15 (expression -> read .)
    INT             reduce using rule 15 (expression -> read .)
    FLOAT           reduce using rule 15 (expression -> read .)
    CHARACTER       reduce using rule 15 (expression -> read .)
    STRING          reduce using rule 15 (expression -> read .)
    OPEN_PAR        reduce using rule 15 (expression -> read .)
    READ            reduce using rule 15 (expression -> read .)
    TRUE            reduce using rule 15 (expression -> read .)
    FALSE           reduce using rule 15 (expression -> read .)
    CLOSE_BRA       reduce using rule 15 (expression -> read .)


state 14

    (16) expression -> display .

    $end            reduce using rule 16 (expression -> display .)
    CLOSE_PAR       reduce using rule 16 (expression -> display .)
    ID              reduce using rule 16 (expression -> display .)
    INT             reduce using rule 16 (expression -> display .)
    FLOAT           reduce using rule 16 (expression -> display .)
    CHARACTER       reduce using rule 16 (expression -> display .)
    STRING          reduce using rule 16 (expression -> display .)
    OPEN_PAR        reduce using rule 16 (expression -> display .)
    READ            reduce using rule 16 (expression -> display .)
    TRUE            reduce using rule 16 (expression -> display .)
    FALSE           reduce using rule 16 (expression -> display .)
    CLOSE_BRA       reduce using rule 16 (expression -> display .)


state 15

    (17) expression -> cons .

    $end            reduce using rule 17 (expression -> cons .)
    CLOSE_PAR       reduce using rule 17 (expression -> cons .)
    ID              reduce using rule 17 (expression -> cons .)
    INT             reduce using rule 17 (expression -> cons .)
    FLOAT           reduce using rule 17 (expression -> cons .)
    CHARACTER       reduce using rule 17 (expression -> cons .)
    STRING          reduce using rule 17 (expression -> cons .)
    OPEN_PAR        reduce using rule 17 (expression -> cons .)
    READ            reduce using rule 17 (expression -> cons .)
    TRUE            reduce using rule 17 (expression -> cons .)
    FALSE           reduce using rule 17 (expression -> cons .)
    CLOSE_BRA       reduce using rule 17 (expression -> cons .)


state 16

    (18) expression -> list_manip .

    $end            reduce using rule 18 (expression -> list_manip .)
    CLOSE_PAR       reduce using rule 18 (expression -> list_manip .)
    ID              reduce using rule 18 (expression -> list_manip .)
    INT             reduce using rule 18 (expression -> list_manip .)
    FLOAT           reduce using rule 18 (expression -> list_manip .)
    CHARACTER       reduce using rule 18 (expression -> list_manip .)
    STRING          reduce using rule 18 (expression -> list_manip .)
    OPEN_PAR        reduce using rule 18 (expression -> list_manip .)
    READ            reduce using rule 18 (expression -> list_manip .)
    TRUE            reduce using rule 18 (expression -> list_manip .)
    FALSE           reduce using rule 18 (expression -> list_manip .)
    CLOSE_BRA       reduce using rule 18 (expression -> list_manip .)


state 17

    (55) constant -> INT .

    $end            reduce using rule 55 (constant -> INT .)
    CLOSE_PAR       reduce using rule 55 (constant -> INT .)
    INT             reduce using rule 55 (constant -> INT .)
    FLOAT           reduce using rule 55 (constant -> INT .)
    CHARACTER       reduce using rule 55 (constant -> INT .)
    STRING          reduce using rule 55 (constant -> INT .)
    OPEN_PAR        reduce using rule 55 (constant -> INT .)
    EMPTY           reduce using rule 55 (constant -> INT .)
    ID              reduce using rule 55 (constant -> INT .)
    TRUE            reduce using rule 55 (constant -> INT .)
    FALSE           reduce using rule 55 (constant -> INT .)
    READ            reduce using rule 55 (constant -> INT .)
    CLOSE_BRA       reduce using rule 55 (constant -> INT .)


state 18

    (56) constant -> FLOAT .

    $end            reduce using rule 56 (constant -> FLOAT .)
    CLOSE_PAR       reduce using rule 56 (constant -> FLOAT .)
    INT             reduce using rule 56 (constant -> FLOAT .)
    FLOAT           reduce using rule 56 (constant -> FLOAT .)
    CHARACTER       reduce using rule 56 (constant -> FLOAT .)
    STRING          reduce using rule 56 (constant -> FLOAT .)
    OPEN_PAR        reduce using rule 56 (constant -> FLOAT .)
    EMPTY           reduce using rule 56 (constant -> FLOAT .)
    ID              reduce using rule 56 (constant -> FLOAT .)
    TRUE            reduce using rule 56 (constant -> FLOAT .)
    FALSE           reduce using rule 56 (constant -> FLOAT .)
    READ            reduce using rule 56 (constant -> FLOAT .)
    CLOSE_BRA       reduce using rule 56 (constant -> FLOAT .)


state 19

    (57) constant -> CHARACTER .

    $end            reduce using rule 57 (constant -> CHARACTER .)
    CLOSE_PAR       reduce using rule 57 (constant -> CHARACTER .)
    INT             reduce using rule 57 (constant -> CHARACTER .)
    FLOAT           reduce using rule 57 (constant -> CHARACTER .)
    CHARACTER       reduce using rule 57 (constant -> CHARACTER .)
    STRING          reduce using rule 57 (constant -> CHARACTER .)
    OPEN_PAR        reduce using rule 57 (constant -> CHARACTER .)
    EMPTY           reduce using rule 57 (constant -> CHARACTER .)
    ID              reduce using rule 57 (constant -> CHARACTER .)
    TRUE            reduce using rule 57 (constant -> CHARACTER .)
    FALSE           reduce using rule 57 (constant -> CHARACTER .)
    READ            reduce using rule 57 (constant -> CHARACTER .)
    CLOSE_BRA       reduce using rule 57 (constant -> CHARACTER .)


state 20

    (58) constant -> STRING .

    $end            reduce using rule 58 (constant -> STRING .)
    CLOSE_PAR       reduce using rule 58 (constant -> STRING .)
    INT             reduce using rule 58 (constant -> STRING .)
    FLOAT           reduce using rule 58 (constant -> STRING .)
    CHARACTER       reduce using rule 58 (constant -> STRING .)
    STRING          reduce using rule 58 (constant -> STRING .)
    OPEN_PAR        reduce using rule 58 (constant -> STRING .)
    EMPTY           reduce using rule 58 (constant -> STRING .)
    ID              reduce using rule 58 (constant -> STRING .)
    TRUE            reduce using rule 58 (constant -> STRING .)
    FALSE           reduce using rule 58 (constant -> STRING .)
    READ            reduce using rule 58 (constant -> STRING .)
    CLOSE_BRA       reduce using rule 58 (constant -> STRING .)


state 21

    (59) constant -> boolean .

    $end            reduce using rule 59 (constant -> boolean .)
    CLOSE_PAR       reduce using rule 59 (constant -> boolean .)
    INT             reduce using rule 59 (constant -> boolean .)
    FLOAT           reduce using rule 59 (constant -> boolean .)
    CHARACTER       reduce using rule 59 (constant -> boolean .)
    STRING          reduce using rule 59 (constant -> boolean .)
    OPEN_PAR        reduce using rule 59 (constant -> boolean .)
    EMPTY           reduce using rule 59 (constant -> boolean .)
    ID              reduce using rule 59 (constant -> boolean .)
    TRUE            reduce using rule 59 (constant -> boolean .)
    FALSE           reduce using rule 59 (constant -> boolean .)
    READ            reduce using rule 59 (constant -> boolean .)
    CLOSE_BRA       reduce using rule 59 (constant -> boolean .)


state 22

    (27) read -> READ .

    $end            reduce using rule 27 (read -> READ .)
    CLOSE_PAR       reduce using rule 27 (read -> READ .)
    ID              reduce using rule 27 (read -> READ .)
    INT             reduce using rule 27 (read -> READ .)
    FLOAT           reduce using rule 27 (read -> READ .)
    CHARACTER       reduce using rule 27 (read -> READ .)
    STRING          reduce using rule 27 (read -> READ .)
    OPEN_PAR        reduce using rule 27 (read -> READ .)
    READ            reduce using rule 27 (read -> READ .)
    TRUE            reduce using rule 27 (read -> READ .)
    FALSE           reduce using rule 27 (read -> READ .)
    CLOSE_BRA       reduce using rule 27 (read -> READ .)


state 23

    (46) boolean -> TRUE .

    $end            reduce using rule 46 (boolean -> TRUE .)
    CLOSE_PAR       reduce using rule 46 (boolean -> TRUE .)
    INT             reduce using rule 46 (boolean -> TRUE .)
    FLOAT           reduce using rule 46 (boolean -> TRUE .)
    CHARACTER       reduce using rule 46 (boolean -> TRUE .)
    STRING          reduce using rule 46 (boolean -> TRUE .)
    OPEN_PAR        reduce using rule 46 (boolean -> TRUE .)
    EMPTY           reduce using rule 46 (boolean -> TRUE .)
    ID              reduce using rule 46 (boolean -> TRUE .)
    TRUE            reduce using rule 46 (boolean -> TRUE .)
    FALSE           reduce using rule 46 (boolean -> TRUE .)
    READ            reduce using rule 46 (boolean -> TRUE .)
    CLOSE_BRA       reduce using rule 46 (boolean -> TRUE .)


state 24

    (47) boolean -> FALSE .

    $end            reduce using rule 47 (boolean -> FALSE .)
    CLOSE_PAR       reduce using rule 47 (boolean -> FALSE .)
    INT             reduce using rule 47 (boolean -> FALSE .)
    FLOAT           reduce using rule 47 (boolean -> FALSE .)
    CHARACTER       reduce using rule 47 (boolean -> FALSE .)
    STRING          reduce using rule 47 (boolean -> FALSE .)
    OPEN_PAR        reduce using rule 47 (boolean -> FALSE .)
    EMPTY           reduce using rule 47 (boolean -> FALSE .)
    ID              reduce using rule 47 (boolean -> FALSE .)
    TRUE            reduce using rule 47 (boolean -> FALSE .)
    FALSE           reduce using rule 47 (boolean -> FALSE .)
    READ            reduce using rule 47 (boolean -> FALSE .)
    CLOSE_BRA       reduce using rule 47 (boolean -> FALSE .)


state 25

    (4) form -> definition definition .

    $end            reduce using rule 4 (form -> definition definition .)


state 26

    (5) definition -> OPEN_PAR . DEFINE ID body CLOSE_PAR

    DEFINE          shift and go to state 27


state 27

    (5) definition -> OPEN_PAR DEFINE . ID body CLOSE_PAR

    ID              shift and go to state 52


state 28

    (19) if_expression -> OPEN_PAR IF . comparison_expression expression CLOSE_PAR
    (20) if_expression -> OPEN_PAR IF . comparison_expression expression expression CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR

    OPEN_PAR        shift and go to state 53

    comparison_expression          shift and go to state 54

state 29

    (23) do_expression -> OPEN_PAR DO . id_set operation comparison_expression expression CLOSE_PAR
    (24) id_set -> . OPEN_PAR ID constant CLOSE_PAR

    OPEN_PAR        shift and go to state 55

    id_set                         shift and go to state 56

state 30

    (21) cond_expression -> OPEN_PAR COND . OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> OPEN_PAR COND . OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR

    OPEN_BRA        shift and go to state 57


state 31

    (26) comparison_expression -> OPEN_PAR comparison . expression expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 59
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    comparison_expression          shift and go to state 11
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 32

    (25) operation -> OPEN_PAR symbol . expression expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 60
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    comparison_expression          shift and go to state 11
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 33

    (28) read -> OPEN_PAR READ . CLOSE_PAR

    CLOSE_PAR       shift and go to state 61


state 34

    (29) display -> OPEN_PAR DISPLAY . expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 62
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    comparison_expression          shift and go to state 11
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 35

    (30) cons -> OPEN_PAR CONS . constant list_expression CLOSE_PAR
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    constant                       shift and go to state 63
    boolean                        shift and go to state 21

state 36

    (31) list_manip -> OPEN_PAR list_op . list CLOSE_PAR
    (37) list -> . cons
    (38) list -> . list_manip
    (39) list -> . EMPTY
    (40) list -> . ID
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR

    EMPTY           shift and go to state 68
    ID              shift and go to state 69
    OPEN_PAR        shift and go to state 64

    list                           shift and go to state 65
    cons                           shift and go to state 66
    list_manip                     shift and go to state 67

state 37

    (48) comparison -> EQQUES .

    ID              reduce using rule 48 (comparison -> EQQUES .)
    INT             reduce using rule 48 (comparison -> EQQUES .)
    FLOAT           reduce using rule 48 (comparison -> EQQUES .)
    CHARACTER       reduce using rule 48 (comparison -> EQQUES .)
    STRING          reduce using rule 48 (comparison -> EQQUES .)
    OPEN_PAR        reduce using rule 48 (comparison -> EQQUES .)
    READ            reduce using rule 48 (comparison -> EQQUES .)
    TRUE            reduce using rule 48 (comparison -> EQQUES .)
    FALSE           reduce using rule 48 (comparison -> EQQUES .)


state 38

    (49) comparison -> NEQQUES .

    ID              reduce using rule 49 (comparison -> NEQQUES .)
    INT             reduce using rule 49 (comparison -> NEQQUES .)
    FLOAT           reduce using rule 49 (comparison -> NEQQUES .)
    CHARACTER       reduce using rule 49 (comparison -> NEQQUES .)
    STRING          reduce using rule 49 (comparison -> NEQQUES .)
    OPEN_PAR        reduce using rule 49 (comparison -> NEQQUES .)
    READ            reduce using rule 49 (comparison -> NEQQUES .)
    TRUE            reduce using rule 49 (comparison -> NEQQUES .)
    FALSE           reduce using rule 49 (comparison -> NEQQUES .)


state 39

    (50) comparison -> EQUALS .

    ID              reduce using rule 50 (comparison -> EQUALS .)
    INT             reduce using rule 50 (comparison -> EQUALS .)
    FLOAT           reduce using rule 50 (comparison -> EQUALS .)
    CHARACTER       reduce using rule 50 (comparison -> EQUALS .)
    STRING          reduce using rule 50 (comparison -> EQUALS .)
    OPEN_PAR        reduce using rule 50 (comparison -> EQUALS .)
    READ            reduce using rule 50 (comparison -> EQUALS .)
    TRUE            reduce using rule 50 (comparison -> EQUALS .)
    FALSE           reduce using rule 50 (comparison -> EQUALS .)


state 40

    (51) comparison -> GREATER .

    ID              reduce using rule 51 (comparison -> GREATER .)
    INT             reduce using rule 51 (comparison -> GREATER .)
    FLOAT           reduce using rule 51 (comparison -> GREATER .)
    CHARACTER       reduce using rule 51 (comparison -> GREATER .)
    STRING          reduce using rule 51 (comparison -> GREATER .)
    OPEN_PAR        reduce using rule 51 (comparison -> GREATER .)
    READ            reduce using rule 51 (comparison -> GREATER .)
    TRUE            reduce using rule 51 (comparison -> GREATER .)
    FALSE           reduce using rule 51 (comparison -> GREATER .)


state 41

    (52) comparison -> LESS .

    ID              reduce using rule 52 (comparison -> LESS .)
    INT             reduce using rule 52 (comparison -> LESS .)
    FLOAT           reduce using rule 52 (comparison -> LESS .)
    CHARACTER       reduce using rule 52 (comparison -> LESS .)
    STRING          reduce using rule 52 (comparison -> LESS .)
    OPEN_PAR        reduce using rule 52 (comparison -> LESS .)
    READ            reduce using rule 52 (comparison -> LESS .)
    TRUE            reduce using rule 52 (comparison -> LESS .)
    FALSE           reduce using rule 52 (comparison -> LESS .)


state 42

    (53) comparison -> GREATER_EQUAL .

    ID              reduce using rule 53 (comparison -> GREATER_EQUAL .)
    INT             reduce using rule 53 (comparison -> GREATER_EQUAL .)
    FLOAT           reduce using rule 53 (comparison -> GREATER_EQUAL .)
    CHARACTER       reduce using rule 53 (comparison -> GREATER_EQUAL .)
    STRING          reduce using rule 53 (comparison -> GREATER_EQUAL .)
    OPEN_PAR        reduce using rule 53 (comparison -> GREATER_EQUAL .)
    READ            reduce using rule 53 (comparison -> GREATER_EQUAL .)
    TRUE            reduce using rule 53 (comparison -> GREATER_EQUAL .)
    FALSE           reduce using rule 53 (comparison -> GREATER_EQUAL .)


state 43

    (54) comparison -> LESS_EQUAL .

    ID              reduce using rule 54 (comparison -> LESS_EQUAL .)
    INT             reduce using rule 54 (comparison -> LESS_EQUAL .)
    FLOAT           reduce using rule 54 (comparison -> LESS_EQUAL .)
    CHARACTER       reduce using rule 54 (comparison -> LESS_EQUAL .)
    STRING          reduce using rule 54 (comparison -> LESS_EQUAL .)
    OPEN_PAR        reduce using rule 54 (comparison -> LESS_EQUAL .)
    READ            reduce using rule 54 (comparison -> LESS_EQUAL .)
    TRUE            reduce using rule 54 (comparison -> LESS_EQUAL .)
    FALSE           reduce using rule 54 (comparison -> LESS_EQUAL .)


state 44

    (41) symbol -> ADD .

    ID              reduce using rule 41 (symbol -> ADD .)
    INT             reduce using rule 41 (symbol -> ADD .)
    FLOAT           reduce using rule 41 (symbol -> ADD .)
    CHARACTER       reduce using rule 41 (symbol -> ADD .)
    STRING          reduce using rule 41 (symbol -> ADD .)
    OPEN_PAR        reduce using rule 41 (symbol -> ADD .)
    READ            reduce using rule 41 (symbol -> ADD .)
    TRUE            reduce using rule 41 (symbol -> ADD .)
    FALSE           reduce using rule 41 (symbol -> ADD .)


state 45

    (42) symbol -> MINUS .

    ID              reduce using rule 42 (symbol -> MINUS .)
    INT             reduce using rule 42 (symbol -> MINUS .)
    FLOAT           reduce using rule 42 (symbol -> MINUS .)
    CHARACTER       reduce using rule 42 (symbol -> MINUS .)
    STRING          reduce using rule 42 (symbol -> MINUS .)
    OPEN_PAR        reduce using rule 42 (symbol -> MINUS .)
    READ            reduce using rule 42 (symbol -> MINUS .)
    TRUE            reduce using rule 42 (symbol -> MINUS .)
    FALSE           reduce using rule 42 (symbol -> MINUS .)


state 46

    (43) symbol -> DIVIDE .

    ID              reduce using rule 43 (symbol -> DIVIDE .)
    INT             reduce using rule 43 (symbol -> DIVIDE .)
    FLOAT           reduce using rule 43 (symbol -> DIVIDE .)
    CHARACTER       reduce using rule 43 (symbol -> DIVIDE .)
    STRING          reduce using rule 43 (symbol -> DIVIDE .)
    OPEN_PAR        reduce using rule 43 (symbol -> DIVIDE .)
    READ            reduce using rule 43 (symbol -> DIVIDE .)
    TRUE            reduce using rule 43 (symbol -> DIVIDE .)
    FALSE           reduce using rule 43 (symbol -> DIVIDE .)


state 47

    (44) symbol -> MULTIPLY .

    ID              reduce using rule 44 (symbol -> MULTIPLY .)
    INT             reduce using rule 44 (symbol -> MULTIPLY .)
    FLOAT           reduce using rule 44 (symbol -> MULTIPLY .)
    CHARACTER       reduce using rule 44 (symbol -> MULTIPLY .)
    STRING          reduce using rule 44 (symbol -> MULTIPLY .)
    OPEN_PAR        reduce using rule 44 (symbol -> MULTIPLY .)
    READ            reduce using rule 44 (symbol -> MULTIPLY .)
    TRUE            reduce using rule 44 (symbol -> MULTIPLY .)
    FALSE           reduce using rule 44 (symbol -> MULTIPLY .)


state 48

    (45) symbol -> REMAINDER .

    ID              reduce using rule 45 (symbol -> REMAINDER .)
    INT             reduce using rule 45 (symbol -> REMAINDER .)
    FLOAT           reduce using rule 45 (symbol -> REMAINDER .)
    CHARACTER       reduce using rule 45 (symbol -> REMAINDER .)
    STRING          reduce using rule 45 (symbol -> REMAINDER .)
    OPEN_PAR        reduce using rule 45 (symbol -> REMAINDER .)
    READ            reduce using rule 45 (symbol -> REMAINDER .)
    TRUE            reduce using rule 45 (symbol -> REMAINDER .)
    FALSE           reduce using rule 45 (symbol -> REMAINDER .)


state 49

    (34) list_op -> CDR .

    OPEN_PAR        reduce using rule 34 (list_op -> CDR .)
    EMPTY           reduce using rule 34 (list_op -> CDR .)
    ID              reduce using rule 34 (list_op -> CDR .)


state 50

    (35) list_op -> CAR .

    OPEN_PAR        reduce using rule 35 (list_op -> CAR .)
    EMPTY           reduce using rule 35 (list_op -> CAR .)
    ID              reduce using rule 35 (list_op -> CAR .)


state 51

    (36) list_op -> LAST .

    OPEN_PAR        reduce using rule 36 (list_op -> LAST .)
    EMPTY           reduce using rule 36 (list_op -> LAST .)
    ID              reduce using rule 36 (list_op -> LAST .)


state 52

    (5) definition -> OPEN_PAR DEFINE ID . body CLOSE_PAR
    (6) body -> . expression
    (7) body -> . definition
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (5) definition -> . OPEN_PAR DEFINE ID body CLOSE_PAR
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    OPEN_PAR        shift and go to state 5
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    body                           shift and go to state 70
    expression                     shift and go to state 71
    definition                     shift and go to state 72
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    comparison_expression          shift and go to state 11
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 53

    (26) comparison_expression -> OPEN_PAR . comparison expression expression CLOSE_PAR
    (48) comparison -> . EQQUES
    (49) comparison -> . NEQQUES
    (50) comparison -> . EQUALS
    (51) comparison -> . GREATER
    (52) comparison -> . LESS
    (53) comparison -> . GREATER_EQUAL
    (54) comparison -> . LESS_EQUAL

    EQQUES          shift and go to state 37
    NEQQUES         shift and go to state 38
    EQUALS          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

    comparison                     shift and go to state 31

state 54

    (19) if_expression -> OPEN_PAR IF comparison_expression . expression CLOSE_PAR
    (20) if_expression -> OPEN_PAR IF comparison_expression . expression expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    comparison_expression          shift and go to state 11
    expression                     shift and go to state 73
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 55

    (24) id_set -> OPEN_PAR . ID constant CLOSE_PAR

    ID              shift and go to state 74


state 56

    (23) do_expression -> OPEN_PAR DO id_set . operation comparison_expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR

    OPEN_PAR        shift and go to state 75

    operation                      shift and go to state 76

state 57

    (21) cond_expression -> OPEN_PAR COND OPEN_BRA . comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> OPEN_PAR COND OPEN_BRA . comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR

    OPEN_PAR        shift and go to state 53

    comparison_expression          shift and go to state 77

state 58

    (19) if_expression -> OPEN_PAR . IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> OPEN_PAR . IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> OPEN_PAR . DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> OPEN_PAR . COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> OPEN_PAR . COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> OPEN_PAR . comparison expression expression CLOSE_PAR
    (25) operation -> OPEN_PAR . symbol expression expression CLOSE_PAR
    (28) read -> OPEN_PAR . READ CLOSE_PAR
    (29) display -> OPEN_PAR . DISPLAY expression CLOSE_PAR
    (30) cons -> OPEN_PAR . CONS constant list_expression CLOSE_PAR
    (31) list_manip -> OPEN_PAR . list_op list CLOSE_PAR
    (48) comparison -> . EQQUES
    (49) comparison -> . NEQQUES
    (50) comparison -> . EQUALS
    (51) comparison -> . GREATER
    (52) comparison -> . LESS
    (53) comparison -> . GREATER_EQUAL
    (54) comparison -> . LESS_EQUAL
    (41) symbol -> . ADD
    (42) symbol -> . MINUS
    (43) symbol -> . DIVIDE
    (44) symbol -> . MULTIPLY
    (45) symbol -> . REMAINDER
    (34) list_op -> . CDR
    (35) list_op -> . CAR
    (36) list_op -> . LAST

    IF              shift and go to state 28
    DO              shift and go to state 29
    COND            shift and go to state 30
    READ            shift and go to state 33
    DISPLAY         shift and go to state 34
    CONS            shift and go to state 35
    EQQUES          shift and go to state 37
    NEQQUES         shift and go to state 38
    EQUALS          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    ADD             shift and go to state 44
    MINUS           shift and go to state 45
    DIVIDE          shift and go to state 46
    MULTIPLY        shift and go to state 47
    REMAINDER       shift and go to state 48
    CDR             shift and go to state 49
    CAR             shift and go to state 50
    LAST            shift and go to state 51

    comparison                     shift and go to state 31
    symbol                         shift and go to state 32
    list_op                        shift and go to state 36

state 59

    (26) comparison_expression -> OPEN_PAR comparison expression . expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 78
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    comparison_expression          shift and go to state 11
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 60

    (25) operation -> OPEN_PAR symbol expression . expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 79
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    comparison_expression          shift and go to state 11
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 61

    (28) read -> OPEN_PAR READ CLOSE_PAR .

    $end            reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    ID              reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    INT             reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    FLOAT           reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    CHARACTER       reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    STRING          reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    OPEN_PAR        reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    READ            reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    TRUE            reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    FALSE           reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 28 (read -> OPEN_PAR READ CLOSE_PAR .)


state 62

    (29) display -> OPEN_PAR DISPLAY expression . CLOSE_PAR

    CLOSE_PAR       shift and go to state 80


state 63

    (30) cons -> OPEN_PAR CONS constant . list_expression CLOSE_PAR
    (32) list_expression -> . list
    (33) list_expression -> . constant
    (37) list -> . cons
    (38) list -> . list_manip
    (39) list -> . EMPTY
    (40) list -> . ID
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    EMPTY           shift and go to state 68
    ID              shift and go to state 69
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 64
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    constant                       shift and go to state 81
    list_expression                shift and go to state 82
    list                           shift and go to state 83
    cons                           shift and go to state 66
    list_manip                     shift and go to state 67
    boolean                        shift and go to state 21

state 64

    (30) cons -> OPEN_PAR . CONS constant list_expression CLOSE_PAR
    (31) list_manip -> OPEN_PAR . list_op list CLOSE_PAR
    (34) list_op -> . CDR
    (35) list_op -> . CAR
    (36) list_op -> . LAST

    CONS            shift and go to state 35
    CDR             shift and go to state 49
    CAR             shift and go to state 50
    LAST            shift and go to state 51

    list_op                        shift and go to state 36

state 65

    (31) list_manip -> OPEN_PAR list_op list . CLOSE_PAR

    CLOSE_PAR       shift and go to state 84


state 66

    (37) list -> cons .

    CLOSE_PAR       reduce using rule 37 (list -> cons .)


state 67

    (38) list -> list_manip .

    CLOSE_PAR       reduce using rule 38 (list -> list_manip .)


state 68

    (39) list -> EMPTY .

    CLOSE_PAR       reduce using rule 39 (list -> EMPTY .)


state 69

    (40) list -> ID .

    CLOSE_PAR       reduce using rule 40 (list -> ID .)


state 70

    (5) definition -> OPEN_PAR DEFINE ID body . CLOSE_PAR

    CLOSE_PAR       shift and go to state 85


state 71

    (6) body -> expression .

    CLOSE_PAR       reduce using rule 6 (body -> expression .)


state 72

    (7) body -> definition .

    CLOSE_PAR       reduce using rule 7 (body -> definition .)


state 73

    (19) if_expression -> OPEN_PAR IF comparison_expression expression . CLOSE_PAR
    (20) if_expression -> OPEN_PAR IF comparison_expression expression . expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    CLOSE_PAR       shift and go to state 87
    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    comparison_expression          shift and go to state 11
    expression                     shift and go to state 86
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 74

    (24) id_set -> OPEN_PAR ID . constant CLOSE_PAR
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    constant                       shift and go to state 88
    boolean                        shift and go to state 21

state 75

    (25) operation -> OPEN_PAR . symbol expression expression CLOSE_PAR
    (41) symbol -> . ADD
    (42) symbol -> . MINUS
    (43) symbol -> . DIVIDE
    (44) symbol -> . MULTIPLY
    (45) symbol -> . REMAINDER

    ADD             shift and go to state 44
    MINUS           shift and go to state 45
    DIVIDE          shift and go to state 46
    MULTIPLY        shift and go to state 47
    REMAINDER       shift and go to state 48

    symbol                         shift and go to state 32

state 76

    (23) do_expression -> OPEN_PAR DO id_set operation . comparison_expression expression CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR

    OPEN_PAR        shift and go to state 53

    comparison_expression          shift and go to state 89

state 77

    (21) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression . expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression . expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    comparison_expression          shift and go to state 11
    expression                     shift and go to state 90
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 78

    (26) comparison_expression -> OPEN_PAR comparison expression expression . CLOSE_PAR

    CLOSE_PAR       shift and go to state 91


state 79

    (25) operation -> OPEN_PAR symbol expression expression . CLOSE_PAR

    CLOSE_PAR       shift and go to state 92


state 80

    (29) display -> OPEN_PAR DISPLAY expression CLOSE_PAR .

    $end            reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    ID              reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    INT             reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    FLOAT           reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    CHARACTER       reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    STRING          reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    OPEN_PAR        reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    READ            reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    TRUE            reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    FALSE           reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 29 (display -> OPEN_PAR DISPLAY expression CLOSE_PAR .)


state 81

    (33) list_expression -> constant .

    CLOSE_PAR       reduce using rule 33 (list_expression -> constant .)


state 82

    (30) cons -> OPEN_PAR CONS constant list_expression . CLOSE_PAR

    CLOSE_PAR       shift and go to state 93


state 83

    (32) list_expression -> list .

    CLOSE_PAR       reduce using rule 32 (list_expression -> list .)


state 84

    (31) list_manip -> OPEN_PAR list_op list CLOSE_PAR .

    $end            reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    ID              reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    INT             reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    FLOAT           reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    CHARACTER       reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    STRING          reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    OPEN_PAR        reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    READ            reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    TRUE            reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    FALSE           reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 31 (list_manip -> OPEN_PAR list_op list CLOSE_PAR .)


state 85

    (5) definition -> OPEN_PAR DEFINE ID body CLOSE_PAR .

    $end            reduce using rule 5 (definition -> OPEN_PAR DEFINE ID body CLOSE_PAR .)
    OPEN_PAR        reduce using rule 5 (definition -> OPEN_PAR DEFINE ID body CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 5 (definition -> OPEN_PAR DEFINE ID body CLOSE_PAR .)


state 86

    (20) if_expression -> OPEN_PAR IF comparison_expression expression expression . CLOSE_PAR

    CLOSE_PAR       shift and go to state 94


state 87

    (19) if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .

    $end            reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    ID              reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    INT             reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    FLOAT           reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    CHARACTER       reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    STRING          reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    OPEN_PAR        reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    READ            reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    TRUE            reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    FALSE           reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 19 (if_expression -> OPEN_PAR IF comparison_expression expression CLOSE_PAR .)


state 88

    (24) id_set -> OPEN_PAR ID constant . CLOSE_PAR

    CLOSE_PAR       shift and go to state 95


state 89

    (23) do_expression -> OPEN_PAR DO id_set operation comparison_expression . expression CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    operation                      shift and go to state 12
    comparison_expression          shift and go to state 11
    expression                     shift and go to state 96
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 90

    (21) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression . CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression . CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR

    CLOSE_BRA       shift and go to state 97


state 91

    (26) comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .

    $end            reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    ID              reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    INT             reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    FLOAT           reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    CHARACTER       reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    STRING          reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    OPEN_PAR        reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    READ            reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    TRUE            reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    FALSE           reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 26 (comparison_expression -> OPEN_PAR comparison expression expression CLOSE_PAR .)


state 92

    (25) operation -> OPEN_PAR symbol expression expression CLOSE_PAR .

    $end            reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    OPEN_PAR        reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    ID              reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    INT             reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    FLOAT           reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    CHARACTER       reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    STRING          reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    READ            reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    TRUE            reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    FALSE           reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 25 (operation -> OPEN_PAR symbol expression expression CLOSE_PAR .)


state 93

    (30) cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .

    $end            reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    ID              reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    INT             reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    FLOAT           reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    CHARACTER       reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    STRING          reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    OPEN_PAR        reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    READ            reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    TRUE            reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    FALSE           reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 30 (cons -> OPEN_PAR CONS constant list_expression CLOSE_PAR .)


state 94

    (20) if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .

    $end            reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    ID              reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    INT             reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    FLOAT           reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    CHARACTER       reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    STRING          reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    OPEN_PAR        reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    READ            reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    TRUE            reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    FALSE           reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 20 (if_expression -> OPEN_PAR IF comparison_expression expression expression CLOSE_PAR .)


state 95

    (24) id_set -> OPEN_PAR ID constant CLOSE_PAR .

    OPEN_PAR        reduce using rule 24 (id_set -> OPEN_PAR ID constant CLOSE_PAR .)


state 96

    (23) do_expression -> OPEN_PAR DO id_set operation comparison_expression expression . CLOSE_PAR

    CLOSE_PAR       shift and go to state 98


state 97

    (21) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA . CLOSE_PAR
    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA . OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR

    CLOSE_PAR       shift and go to state 100
    OPEN_BRA        shift and go to state 99


state 98

    (23) do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .

    $end            reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    ID              reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    INT             reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    FLOAT           reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    CHARACTER       reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    STRING          reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    OPEN_PAR        reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    READ            reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    TRUE            reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    FALSE           reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 23 (do_expression -> OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR .)


state 99

    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA . ELSE expression CLOSE_BRA CLOSE_PAR

    ELSE            shift and go to state 101


state 100

    (21) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .

    $end            reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    ID              reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    INT             reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    FLOAT           reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    CHARACTER       reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    STRING          reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    OPEN_PAR        reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    READ            reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    TRUE            reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    FALSE           reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 21 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR .)


state 101

    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE . expression CLOSE_BRA CLOSE_PAR
    (8) expression -> . constant
    (9) expression -> . if_expression
    (10) expression -> . do_expression
    (11) expression -> . cond_expression
    (12) expression -> . comparison_expression
    (13) expression -> . operation
    (14) expression -> . ID
    (15) expression -> . read
    (16) expression -> . display
    (17) expression -> . cons
    (18) expression -> . list_manip
    (55) constant -> . INT
    (56) constant -> . FLOAT
    (57) constant -> . CHARACTER
    (58) constant -> . STRING
    (59) constant -> . boolean
    (19) if_expression -> . OPEN_PAR IF comparison_expression expression CLOSE_PAR
    (20) if_expression -> . OPEN_PAR IF comparison_expression expression expression CLOSE_PAR
    (23) do_expression -> . OPEN_PAR DO id_set operation comparison_expression expression CLOSE_PAR
    (21) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA CLOSE_PAR
    (22) cond_expression -> . OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR
    (26) comparison_expression -> . OPEN_PAR comparison expression expression CLOSE_PAR
    (25) operation -> . OPEN_PAR symbol expression expression CLOSE_PAR
    (27) read -> . READ
    (28) read -> . OPEN_PAR READ CLOSE_PAR
    (29) display -> . OPEN_PAR DISPLAY expression CLOSE_PAR
    (30) cons -> . OPEN_PAR CONS constant list_expression CLOSE_PAR
    (31) list_manip -> . OPEN_PAR list_op list CLOSE_PAR
    (46) boolean -> . TRUE
    (47) boolean -> . FALSE

    ID              shift and go to state 6
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHARACTER       shift and go to state 19
    STRING          shift and go to state 20
    OPEN_PAR        shift and go to state 58
    READ            shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    comparison_expression          shift and go to state 11
    expression                     shift and go to state 102
    constant                       shift and go to state 7
    if_expression                  shift and go to state 8
    do_expression                  shift and go to state 9
    cond_expression                shift and go to state 10
    operation                      shift and go to state 12
    read                           shift and go to state 13
    display                        shift and go to state 14
    cons                           shift and go to state 15
    list_manip                     shift and go to state 16
    boolean                        shift and go to state 21

state 102

    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression . CLOSE_BRA CLOSE_PAR

    CLOSE_BRA       shift and go to state 103


state 103

    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA . CLOSE_PAR

    CLOSE_PAR       shift and go to state 104


state 104

    (22) cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .

    $end            reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    CLOSE_PAR       reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    ID              reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    INT             reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    FLOAT           reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    CHARACTER       reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    STRING          reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    OPEN_PAR        reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    READ            reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    TRUE            reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    FALSE           reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)
    CLOSE_BRA       reduce using rule 22 (cond_expression -> OPEN_PAR COND OPEN_BRA comparison_expression expression CLOSE_BRA OPEN_BRA ELSE expression CLOSE_BRA CLOSE_PAR .)

